#summary Documentation for sympy-research branch of sympy.
#labels Phase-Design,Featured

= Introduction =

This page collects documentation notes for the sympy-research branch of sympy.
More information can be found in 
[http://code.google.com/p/sympy/issues/detail?id=144 Issue 144]

= Mathematical constants =

The following mathematical constants are defined in `sympy`:

 * I --- imaginary unit `sqrt(-1)`
 * oo --- positive infinity
 * nan --- undefined value
 * pi --- pi = 3.14..
 * E, exp(1)  --- Euler number E = 2.718.., exp(1)

Use `.evalf()` method to get floating point approximation with the current precision `Basic.set_precision()`.

== Examples ==

{{{
>>> Basic.set_precision()
28
>>> pi.evalf(), E.evalf()
(3.141592653589793238462643383, 2.718281828459045235360287471)
>>> Basic.set_precision(40)
28
>>> pi.evalf(), E.evalf()
(3.141592653589793238462643383279502884197,
 2.718281828459045235360287471352662497757)
>>> I,I**2,oo,nan
(I, -1, oo, nan)
}}}

= O â€“ the domain of order terms (Landau symbols) =

  `O(f, x)` represents the Landau symbol _O(f, x -> 0)_.

== Call ==

  `O(f, x, y, ..)`

== Parameters ==

  `f` --- an arithmetical expression representing a function in x, y, etc.
  `x, y` --- variables, assumed to be infinitesimal

== Return value ==

  an `O` or `Zero` instance.

== Details ==

 * According to the mathematical definition, for a function f with variables x,y, .., the  Landau symbol _g = O(f, x, y, ..)_ is a representative of a class of functions having the following property: there exists a constant M and a neighborhood of the limit point _(0, 0, ..)_ such that _|g| <= M|f|_ for all values _(x,y,..)_ in that neighborhood.

 * If variables `x, y, ..` are not specified then all symbols in `f` are considered as order variables. Otherwise all other symbols in `f` except `x, y, ..` are considered as parameters.

 * The variables in `O` instance can be accessed via .symbols attribute.

 * The expression in `O` instance can be accessed via .expr attribute.

 * The inclusion relation between _O(f, x)_ and _O(g, x)_ is determined by the result of `limit(f/g, x, 0)`. If the result is unbounded (e.g. `oo`) then _O(g, x)_ is a subset of _O(f, x)_ and `O(f+g,x)` results `O(f,x)`.

 * Automatic simplification is applied to `O` expression. See examples.

 * Assumptions `infinitesimal=True, positive=True` are set to `O` symbols.

== Examples ==

{{{
>>> from sympy.core import *
>>> x,y=Symbol('x'), Symbol('y')
>>> O(x,x),O(3*x,x),O(x+x**2),O(x+1/x),O(x+1/x+exp(2/x))
(O(x, x), O(x, x), O(x, x), O(1 / x, x), O(exp(2 / x), x))
>>> O(x+3*y), O(x+x*y), O(3*x*y**2-x**2*y+x**2*y**2), O(y**2*x**2+x*y**3,y)
(O(x + y, x, y), O(x, x), O(x * y ** 2 + y * x ** 2, x, y), O(y ** 2, y))
>>> O(x*y).expr, O(x*y).symbols
(x * y, (x, y))
>>> O(0,x), O(2,x)
(0, O(1))
}}}

= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages










