#summary Step by step to make a new release of SymPy

= How to make a new release =

== Check the overall quality of !SymPy ==

Do all the following tests on the tarball generated with:
{{{
$ ./setup.py sdist
}}}

=== Are all tests included? ===

As directed in `setup.py`, check the tests list using the command:
{{{
$ python bin/generate_test_list.py
}}}

=== speed of import ==

After several runs, this should be around:
{{{
$ ipython 

In [1]: time import sympy
CPU times: user 0.08 s, sys: 0.00 s, total: 0.09 s
Wall time: 0.09
}}}

=== Does it depend on python2.4 only? ===

Do this on the hg version:
{{{
$ cd bin
$ sudo cowbuilder --execute test_pure
}}}
All tests need to run here.

=== Do all tests run in the isolated environment? ===

Do this on the hg version:
{{{
$ bin/test_isolated 
Generating py.test isolated testsuite...
Done. Run '/tmp/test_sympy.sh'.
$ /tmp/test_sympy.sh |less
}}}

And check manually, that no py.test run generated a stack trace.

=== Does pyglet work? ===

Do this on the hg version:
{{{
$ cd bin
$ sudo cowbuilder --execute test_pure_plotting
[...]
running install_egg_info
Writing /usr/lib/python2.4/site-packages/sympy-0.5.10_hg.egg-info
[0]: cos(x)*sin(y), sin(x)*sin(y), 0.2000000000000000111022302463*x + cos(y) + log(tan((1/2)*y)), 'mode=parametric'
Window initialization failed: Cannot connect to ""
/run: line 36: 14889 Segmentation fault      python plotting.py
Was the plot successful? If not, fix it and do 'python plotting.py'.
root@fuji:/# 
}}}

Important is the `[0]: cos(x)*sin(y), ...` line, that shows that plotting was ok
and pyglet started. It cannot plot in the chroot, so the segmentation fault happens. That's ok. If it says "cannot import pyglet", that's bad and needs to be fixed.

=== does the tarball contain all the needed files? ===

The previous paragraph tests, that all tests pass in the tarball,
but still check by inspection, that the tarball includes all necessary files.

== Do the actual release ==

Clone main repository
{{{
hg clone ssh://hg@hg.sympy.org/sympy
cd sympy
}}}


Change version in `sympy/__init__.py`, e.g.
{{{
vim sympy/__init__.py
hg ci -m v0.5.9
}}}

Tag it, e.g.
{{{
hg tag sympy-0.5.9
}}}

Prepare the release tarball and win32 installer (should work ok even on Linux)
{{{
./setup.py sdist
./setup.py bdist_wininst
}}}

And put dist/sympy-0.5.9.tar.gz and dist/sympy-0.5.9.win32.exe on website

Change version to x.y.z-hg, and start new development cycle
{{{
vim sympy/__init__.py
hg ci -m 'Start of x.y.z+1 development cycle'
}}}


Don't forget to finally push you changes back to the main repository:
{{{
hg push
}}}

== Sites to update ==

  * http://code.google.com/p/sympy/wiki/FrontPage
  * http://code.google.com/p/sympy/wiki/Changes
  * http://code.google.com/p/sympy/
  * http://sympy.googlecode.com/svn/api/sympy.html (see TechnicalTasks)
  * http://en.wikipedia.org/wiki/SymPy
  * http://en.wikipedia.org/wiki/Comparison_of_computer_algebra_systems
  * http://freshmeat.net/projects/sympy/
  * http://pypi.python.org/pypi/SymPy/

== Other things ==

  * Create a Debian package
  * Create a [SymPyspkg SymPy spkg] Sage package