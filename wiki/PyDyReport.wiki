#summary Review of the 2009 Summer of Code project.
#labels PyDy,GSoC

= About Me =
My name is Dale Lukas Peterson ('Luke') and I am a Ph.D candidate in the Mechanical and Aerospace Engineering department at the University of California Davis.  My research emphasis is dynamical systems and control, with a special interest in bicycle dynamics and control.  

= Introduction =
This page summarizes the events of my Google Summer of code project "PyDy: Newtonian Mechanics with Python".  The main goals of my project are:

  # Provide a convenient and easy to use framework for performing kinematic and dynamic analysis of mechanical systems.
  # Symbolic derivation of equations of motion of systems of rigid bodies and particles with applied forces or torques, and nonholonomic or holonomic constraints.
  # Automatic generation of first order ODE's which allow for numerical integration using existing packages such as Scipy and Numpy. 
  # Automatic generation of functions which make animation of the system very easy
  # Customized LaTeX output of equations of motion and symbolic vector expressions


= First Contact =
I first contacted the Sympy mailing list in January with a [http://groups.google.com/group/sympy/browse_thread/thread/e5a92f7b766bcf51# question] about how hard it might be to implement some code that deals with rotations in a convenient fashion for classical mechanics.  I had been using a closed source program [http://www.autolev.com Autolev] to do some of my research, and while it was quite mature and well tested, it lacked many modern features and I found my workflow in using it to be quite cumbersome and frustrating.  I had a solid understanding of the mathematics behind what it did, but I didn't have much of an idea how I would go about implementing my own code that provided many of the same features.

Ondrej responded to me and suggested I come visit him in Reno and we could start hacking.  So I did, and few days later we had a lot of the basic functionality for working with Symbolic vector expressions.  In that short period of time, the power of Python as a high level language really sunk in -- to implement what we did in 4 days of heavy coding would have taken weeks or months in other languages.

From there, I began working on the project on my own and began writing the GSoC application.  