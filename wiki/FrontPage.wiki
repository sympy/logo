#summary A wiki for the frontpage (this line will not be visible on the front page)

!SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible. !SymPy is written entirely in Python and does not require any external libraries, except optionally for plotting support.

!SymPy is easy to install and get started with. See the [DownloadInstallation download instructions] and [Tutorial tutorial] for more information. It works everywhere, where Python 2.4 or newer is installed (Linux, Windows, Mac Os X, ...).

If you found a bug, please report it in [http://code.google.com/p/sympy/issues/list Issues] or the [http://groups.google.com/group/sympy mailinglist].

http://sympy.googlecode.com/svn/materials/logo/sympy-160px.png

==News==

  * *28 Sep 2007* [http://code.google.com/p/mpmath/ mpmath] project, a Python library for arbitrary-precision floating-point arithmetic (that we use in !SymPy), has started
  * *11 Sep 2007* Final page about the [http://code.google.com/p/sympy/wiki/GSoC2007 2007 Google Summer of Code in SymPy] is available
  * *08 Sep 2007* Version 0.5.3 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *01 Sep 2007* [http://code.google.com/p/symbide/ symbide project], a GUI for !SymPy, has started
  * *20 Aug 2007* Version 0.5.2 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *12 Aug 2007* Versions 0.5.0 and 0.5.1 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *25 Jul 2007* Version 0.4.3 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *08 Jul 2007* Version 0.4.2 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *20 Jun 2007* Version 0.4.1 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *18 Jun 2007* Version 0.4.0 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *12 Apr 2007* The Google Summer of Code applications results are available. See [http://code.google.com/p/sympy/wiki/GSoC2007 GSoC2007]
  * *25 Mar 2007* Version 0.3 released ([http://code.google.com/p/sympy/wiki/Changes changes]).
  * *15 Mar 2007* We are accepting applications for the Google Summer of Code, see SummerOfCode. Deadline is March 26th.
  * *12 Mar 2007* Version 0.2 released.

==Features==

Currently, !SymPy core has around 6300 lines of code (including extensive comments and docstrings) and its capabilities include:

  * basic arithmetics `*,/,+,-,**`
  * basic simplification (like `a*b*b + 2*b*a*b  -> 3*a*b^2`)
  * expansion (like `(a+b)^2 -> a^2 + 2*a*b + b^2`)
  * functions (exp, ln, ...)
  * complex numbers (like `exp(I*x).expand(complex=True)  -> cos(x)+I*sin(x)`)
  * differentiation
  * taylor (laurent) series
  * substitution (like x -> ln(x), or sin -> cos)
  * arbitrary precision integers, rationals and floats
  * noncommutative symbols
  * pattern matching
 
Then there are !SymPy modules (18200 lines including documentation) for these tasks:

  * more functions (sin, cos, tan, atan, asin, acos, factorial, zeta, legendre)
  * limits (like `limit(x*log(x), x, 0) -> 0`)
  * integration using extended Risch-Norman heuristic
  * polynomials (division, gcd, square free decomposition, groebner bases, factorization)
  * solvers (algebraic, difference and differential equations, and systems of equations)
  * symbolic matrices (determinants, LU decomposition...)
  * Pauli and Dirac algebra
  * geometry module
  * plotting (2D and 3D)

plus external packages:

  * [http://code.google.com/p/symbide/ symbide]: GUI for !SymPy in PyGTK

There are extensive tests (6148 lines in 58 files) for every single feature in !SymPy. [SymPyTests More...] 

===Things we are working on===
 
  * See [http://code.google.com/p/sympy/issues/list Issues] for details
  * You can also check our blogs: [http://grupododo.com/planetsympy/ PlanetSympy]
  * Or join us at #sympy on irc.freenode.net

But generally, we are trying to polish things, fix bugs, make !SymPy reliable and faster. We are also trying new ideas in the [http://sympy.googlecode.com/svn/branches/sympy-sandbox/ sympy-sandbox] branch and then implement the good ones in the trunk.

===Some ideas for future development===

  * improve the current functionality
  * Risch integration algorithm
  * asymptotic expansion
  * objects with indices (tensors) 
  * rewrite the core to C++, and use it as an optional module, if the user would like to speed things up (in any case the Python core will always be the default)

and more...

==Documentation==

All the documentation is in the wiki [http://code.google.com/p/sympy/wiki/Documentation Documentation].

==Motivation==

Why another CAS? What is the !SymPy's relationship to SAGE?

Everything is explained in the [http://code.google.com/p/sympy/wiki/Motivation Motivation].

==Usage==

Example in the python interpreter:
{{{
>>> from sympy import Symbol, cos
>>> x=Symbol('x')
>>> e=1/cos(x)
>>> print e.series(x,10)
1 + (1/2)*x**2 + (5/24)*x**4 + (61/720)*x**6 + (277/8064)*x**8 + O(x**10)
}}}

There is a nice console `isympy` (in the `bin` directory, or if you installed the `deb`, it will be in `/usr/bin/isympy`) which just imports sympy and defines symbols x,y,z for you, so the above thing can be achieved by starting `isympy` and typing this one line:
{{{
(1/cos(x)).series(x,10)
}}}

Read the [http://code.google.com/p/sympy/wiki/Tutorial tutorial] for more examples.


==Development==

If you wrote anything interesting using !SymPy, please donate your code back to the project, so that other people can easily use it and we can grow the community.
You are welcomed to join the development. If you find a bug or just want to say what you think, tell us on the [http://groups.google.com/group/sympy mailinglist] (or put your comment/bug report into the [http://code.google.com/p/sympy/issues/list Issues]). We are interested in your opinions if you think the !SymPy's interface is not
as you would expect or if you created some algorithm using !SymPy and would like it to become part of !SymPy (so that others can easily use your code as well).

More information can be found in SympyDevelopment.